// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           String        @id @unique
  email        String        @unique
  password     String
  name         String
  money        Int
  incomes      Income[]
  expenses     Expense[]
  transactions Transaction[]
  created_at   DateTime      @default(now())
  updated_at   DateTime      @default(now())
}

model Income {
  id          String    @id @unique
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  value       Int
  description String
  status      String
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?
  date        DateTime
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())
}

model Expense {
  id          String    @id @unique
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  value       Int
  description String
  status      String
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?
  date        DateTime
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())
}

model Transaction {
  id         String    @id @unique
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  status     String
  type       String
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?
  value      Int
  date       DateTime
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
}

model Category {
  id           String        @id @unique
  name         String
  icon         String
  type         String
  created_at   DateTime      @default(now())
  updated_at   DateTime      @default(now())
  transactions Transaction[]
  Expense      Expense[]
  Income       Income[]
}
